import streamlit as st
import pandas as pd
import gspread
import toml
from oauth2client.service_account import ServiceAccountCredentials

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Resumo do Funcion√°rio", page_icon="üßæ", layout="wide")
st.title("üßæ Resumo do Funcion√°rio - Vinicius")

# Carrega o config.toml
config = toml.load("config.toml")
info = config["GCP_SERVICE_ACCOUNT"]
planilha_url = config["PLANILHA_URL"]["url"]

# Escopo de permiss√µes
escopo = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

# Autentica√ß√£o com dicion√°rio do TOML
credenciais = ServiceAccountCredentials.from_json_keyfile_dict(info, escopo)
cliente = gspread.authorize(credenciais)

# L√™ a planilha e a aba correta
planilha = cliente.open_by_url(planilha_url)
aba_dados = planilha.worksheet("RELATORIO_TRANSACOES")
dados = pd.DataFrame(aba_dados.get_all_records())

# Exibe as colunas dispon√≠veis
st.write("üìã Colunas dispon√≠veis:", dados.columns.tolist())

# Normaliza coluna 'Funcion√°rio'
if "Funcion√°rio" in dados.columns:
    dados["Funcion√°rio"] = dados["Funcion√°rio"].str.strip()
    st.write("üë§ Funcion√°rios √∫nicos na base:", dados["Funcion√°rio"].unique())

    # Filtra s√≥ Vinicius
    df_vini = dados[dados["Funcion√°rio"] == "Vinicius"]

    if df_vini.empty:
        st.warning("‚ö†Ô∏è Nenhum atendimento encontrado para Vinicius.")
    else:
        total_receita = df_vini["Valor (R$)"].sum()
        total_atendimentos = df_vini.shape[0]

        col1, col2 = st.columns(2)
        col1.metric("üí∞ Receita Total", f"R$ {total_receita:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))
        col2.metric("üéØ Total de Atendimentos", total_atendimentos)

        st.subheader("üìä Detalhamento")
        st.dataframe(df_vini[['Data', 'Cliente', 'Servi√ßo', 'Valor (R$)']], use_container_width=True)

else:
    st.error("‚ùå Coluna 'Funcion√°rio' n√£o encontrada na planilha.")
